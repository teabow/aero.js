{"name":"Aero.js","tagline":"Minimalistic Javascript MVC library","body":"![aero.js](http://thibaud.bourgeois.free.fr/aerojs/img/aerojs.png)\r\n\r\n# Getting started\r\n\r\n\r\n### Include aero.js and its dependencies (zepto.js and lodash.js) to your index.html file\r\n```html\r\n<script src=\"path/to/zepto.js\"></script>\r\n<script src=\"path/to/lodash.js\"></script>\r\n<script src=\"path/to/aero.js\"></script>\r\n```\r\n> You can run `bower install aero.js` to retrieve these files\r\n***\r\n\r\n### Then you can create an aero view\r\n```javascript\r\nwindow.app = window.app || {};\r\nwindow.app.views = window.app.views || {};\r\n\r\nwindow.app.views.main = window.aero.view.extend ({\r\n\r\n    template: 'templates/main.html',\r\n\r\n    container: '#content',\r\n\r\n    init: function () {\r\n        this.addEvent('click button.hiBtn', this.hiBtnHandler);\r\n    },\r\n\r\n    hiBtnHandler: function () {\r\n        window.alert('Hi');\r\n    }\r\n\r\n});\r\n```\r\n> The template will be later injected into the container element\r\n***\r\n\r\n### Register the view in aero controller\r\n```javascript\r\nvar views = [\r\n    {\r\n        name: 'main',\r\n        ref: window.app.views.main\r\n    }\r\n];\r\n\r\nwindow.aero.controller.init(views).preload();\r\n```\r\n> Once initialized you can indicate to the controller to preload templates\r\n***\r\n\r\n### Finally, show the view to the browser\r\n```javascript\r\nwindow.aero.controller.showView('main');\r\n```\r\n> You can pass a second parameter (a json object) to the showView function. Then use the <%=key%> notation to use passed data in your associated template\r\n\r\n<br/>\r\n# Data binding extension\r\n\r\n### Input binding\r\nIn your template add the `data-observable-input` attribute to the input you want to observe\r\n```html\r\n<input type=\"text\" name=\"userName\" data-observable-input>\r\n```\r\nThen in your aero view, you can get and set the input value through this variable\r\n```javascript\r\nthis.observables.userName.value\r\n```\r\n\r\n### Value binding\r\nFirst create an object with the value you want to observe (here `name`)\r\n```javascript\r\nthis.observables.user = {name: 'everyone'};\r\n```\r\nThen in your template, add to your html element the `data-observable-value` attribute which value should be `\"user.name\"`\r\n```html\r\n<span data-observable-value=\"user.name\"></span>\r\n```\r\nFinally, you can get and set the name property of user object through this variable\r\n```javascript\r\nthis.observables.user.name\r\n```\r\n\r\n### Array binding\r\nCreate an array in your aero view\r\n```javascript\r\nthis.observables.others = [\r\n    {\r\n        name: 'Lebron'\r\n    },\r\n    {\r\n        name: 'Kobe'\r\n    }\r\n]\r\n```\r\nThen add the `data-observable-array` attribute to your element which value should be the name of your array variable (here `others`), you can specify the template you want to use for every array iteration thanks to the `data-observable-template` attribute\r\n```html\r\n<ul data-observable-array=\"others\" \r\ndata-observable-template=\"templates/user.html\"></ul>\r\n```\r\n> All the data you want to observe should be register in the `observables` object of the related aero view.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}